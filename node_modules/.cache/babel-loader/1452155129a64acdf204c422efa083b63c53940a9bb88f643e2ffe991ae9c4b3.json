{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { extend } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\nimport { FontLoader, TextGeometry } from 'three-stdlib';\nconst types = ['string', 'number'];\nconst getTextFromChildren = children => {\n  let label = '';\n  React.Children.map(children, child => {\n    if (types.includes(typeof child)) {\n      label += child + '';\n    }\n  });\n  return label;\n};\nconst Text3DBase = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    font,\n    loader,\n    size = 1,\n    height = 0.2,\n    bevelThickness = 0.1,\n    bevelSize = 0.01,\n    bevelEnabled = false,\n    bevelOffset = 0,\n    curveSegments = 8,\n    children,\n    ...props\n  } = _ref;\n  React.useMemo(() => {\n    extend({\n      RenamedTextGeometry: TextGeometry\n    });\n  }, []);\n  const _font = React.useMemo(() => loader.parse(font), [font]);\n  const opts = useMemo(() => {\n    return {\n      font: _font,\n      size,\n      height,\n      bevelThickness,\n      bevelSize,\n      bevelEnabled,\n      bevelOffset,\n      curveSegments\n    };\n  }, [_font, size, height, bevelThickness, bevelSize, bevelEnabled, bevelOffset, curveSegments]);\n  /**\n   * We need the `children` in the deps because we\n   * need to be able to do `<Text3d>{state}</Text3d>`.\n   */\n\n  const txt = useMemo(() => getTextFromChildren(children), [children]);\n  const args = React.useMemo(() => [txt, opts], [txt, opts]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({}, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"renamedTextGeometry\", {\n    args: args\n  }), children);\n});\nconst Text3DSuspend = /*#__PURE__*/React.forwardRef((_ref2, ref) => {\n  let {\n    font,\n    loader,\n    ...props\n  } = _ref2;\n  const _font = suspend(async () => {\n    const json = await (await fetch(font)).json();\n    return json;\n  }, [font]);\n  return /*#__PURE__*/React.createElement(Text3DBase, _extends({}, props, {\n    ref: ref,\n    font: _font,\n    loader: loader\n  }));\n});\nconst Text3D = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const loader = React.useMemo(() => new FontLoader(), []);\n  if (typeof props.font === 'string') {\n    return /*#__PURE__*/React.createElement(Text3DSuspend, _extends({}, props, {\n      ref: ref,\n      loader: loader\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(Text3DBase, _extends({}, props, {\n      ref: ref,\n      loader: loader\n    }));\n  }\n});\nexport { Text3D };","map":{"version":3,"names":["_extends","React","useMemo","extend","suspend","FontLoader","TextGeometry","types","getTextFromChildren","children","label","Children","map","child","includes","Text3DBase","forwardRef","_ref","ref","font","loader","size","height","bevelThickness","bevelSize","bevelEnabled","bevelOffset","curveSegments","props","RenamedTextGeometry","_font","parse","opts","txt","args","createElement","Text3DSuspend","_ref2","json","fetch","Text3D"],"sources":["/home/nadaabuissa/Downloads/Computer/node_modules/@react-three/drei/core/Text3D.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { extend } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\nimport { FontLoader, TextGeometry } from 'three-stdlib';\n\nconst types = ['string', 'number'];\n\nconst getTextFromChildren = children => {\n  let label = '';\n  React.Children.map(children, child => {\n    if (types.includes(typeof child)) {\n      label += child + '';\n    }\n  });\n  return label;\n};\n\nconst Text3DBase = /*#__PURE__*/React.forwardRef(({\n  font,\n  loader,\n  size = 1,\n  height = 0.2,\n  bevelThickness = 0.1,\n  bevelSize = 0.01,\n  bevelEnabled = false,\n  bevelOffset = 0,\n  curveSegments = 8,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => {\n    extend({\n      RenamedTextGeometry: TextGeometry\n    });\n  }, []);\n\n  const _font = React.useMemo(() => loader.parse(font), [font]);\n\n  const opts = useMemo(() => {\n    return {\n      font: _font,\n      size,\n      height,\n      bevelThickness,\n      bevelSize,\n      bevelEnabled,\n      bevelOffset,\n      curveSegments\n    };\n  }, [_font, size, height, bevelThickness, bevelSize, bevelEnabled, bevelOffset, curveSegments]);\n  /**\n   * We need the `children` in the deps because we\n   * need to be able to do `<Text3d>{state}</Text3d>`.\n   */\n\n  const txt = useMemo(() => getTextFromChildren(children), [children]);\n  const args = React.useMemo(() => [txt, opts], [txt, opts]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({}, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"renamedTextGeometry\", {\n    args: args\n  }), children);\n});\nconst Text3DSuspend = /*#__PURE__*/React.forwardRef(({\n  font,\n  loader,\n  ...props\n}, ref) => {\n  const _font = suspend(async () => {\n    const json = await (await fetch(font)).json();\n    return json;\n  }, [font]);\n\n  return /*#__PURE__*/React.createElement(Text3DBase, _extends({}, props, {\n    ref: ref,\n    font: _font,\n    loader: loader\n  }));\n});\nconst Text3D = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const loader = React.useMemo(() => new FontLoader(), []);\n\n  if (typeof props.font === 'string') {\n    return /*#__PURE__*/React.createElement(Text3DSuspend, _extends({}, props, {\n      ref: ref,\n      loader: loader\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(Text3DBase, _extends({}, props, {\n      ref: ref,\n      loader: loader\n    }));\n  }\n});\n\nexport { Text3D };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}